package com.smart.admin.modules.dic.service;import java.io.Serializable;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.smart.admin.core.page.Sorter;import com.smart.admin.modules.dic.bean.Dic;import com.smart.admin.modules.dic.mapper.DicMapper;import com.smart.admin.modules.utils.ChosenItem;import com.smart.admin.modules.utils.StringUtils;/** * <p> * </p> * generate time:2014-9-17 16:49:49 *  */@Service(value = "dicService")public class DicServiceImpl implements IDicService {	@Autowired	private DicMapper dicMapper;	@Override	public void save(com.smart.admin.modules.dic.bean.Dic model)			throws Exception {		dicMapper.save(model);	}	@Override	public void update(com.smart.admin.modules.dic.bean.Dic model)			throws Exception {		dicMapper.update(model);	}	@Override	public void delete(Serializable id) throws Exception {		dicMapper.delete(id);	}	@Override	public com.smart.admin.modules.dic.bean.Dic get(Serializable id)			throws Exception {		return dicMapper.get(id);	}	@Override	public List<com.smart.admin.modules.dic.bean.Dic> findAllList()			throws Exception {		return dicMapper.findAllList();	}	@Override	public List<com.smart.admin.modules.dic.bean.Dic> findByPage(			com.smart.admin.modules.dic.bean.Dic model,			com.smart.admin.core.page.Sorter sorter,			com.smart.admin.core.page.Page page) throws Exception {		Map<String, Object> map = new HashMap<String, Object>();		if (sorter == null || StringUtils.isEmpty(sorter.getSortName())) {			sorter = new Sorter();			sorter.setSortName("id");			sorter.setSortType("DESC");		}		page.setPageSize(20);		map.put("name", model.getName());		map.put("start", page.getRecordStartIndex());		map.put("pageSize", page.getPageSize());		map.put("sortField", sorter.getSortName());		map.put("sortType", sorter.getSortType());		int count = dicMapper.count(map);		page.setTotal(count);		return dicMapper.findPageList(map);	}	@Override	public void deleteBatch(Serializable... ids) throws Exception {		dicMapper.deleteBatch(ids);	}	@Override	public List<com.smart.admin.modules.utils.ChosenItem> queryChosenItemByName(			String name) throws Exception {		List<ChosenItem> listItem = new ArrayList<ChosenItem>();		List<Dic> results = dicMapper.selectByname();		if (results != null && results.size() > 0) {			Dic dic = results.get(0);			String value = dic.getDicValue();			String[] tmp = value.split(";");			for (String str : tmp) {				listItem.add(new ChosenItem(str.split("=")[0],						str.split("=")[1], false));			}		}		return listItem;	}}