package com.smart.admin.modules.schedule.service;import java.io.Serializable;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.smart.admin.core.page.Page;import com.smart.admin.core.page.Sorter;import com.smart.admin.modules.schedule.bean.JobRunHistory;import com.smart.admin.modules.schedule.mapper.JobRunHistoryMapper;/** * <p> * </p> * generate time:2015-10-21 9:29:28 *  */@Service(value = "jobRunHistoryService")public class JobRunHistoryServiceImpl implements IJobRunHistoryService {    private final static Logger logger = LoggerFactory.getLogger(JobRunHistoryServiceImpl.class);    @Autowired    private JobRunHistoryMapper jobRunHistoryMapper;    @Override    public void save(JobRunHistory jobRunHistory) throws Exception {        jobRunHistoryMapper.save(jobRunHistory);    }    @Override    public void update(JobRunHistory jobRunHistory) throws Exception {        jobRunHistoryMapper.update(jobRunHistory);    }    @Override    public void delete(Serializable id) throws Exception {        jobRunHistoryMapper.delete(id);    }    @Override    public JobRunHistory get(Serializable id) throws Exception {        return jobRunHistoryMapper.get(id);    }    @Override    public List<JobRunHistory> findAllList() throws Exception {        return jobRunHistoryMapper.findAllList();    }    @Override    public List<JobRunHistory> findByPage(JobRunHistory jobRunHistory, Sorter sorter, Page page) throws Exception {        Map<String, Object> map = new HashMap<String, Object>();        if (sorter == null || StringUtils.isEmpty(sorter.getSortName())) {            sorter = new Sorter();            sorter.setSortName("id");            sorter.setSortType("DESC");        }        page.setPageSize(20);        map.put("jobName", jobRunHistory.getJobName());        map.put("resultState", jobRunHistory.getResultState());        map.put("startTime", jobRunHistory.getStartTime());        map.put("endTime", jobRunHistory.getEndTime());                map.put("start", page.getRecordStartIndex());        map.put("pageSize", page.getPageSize());        map.put("sortField", sorter.getSortName());        map.put("sortType", sorter.getSortType());        int count = jobRunHistoryMapper.count(map);        page.setTotal(count);        return jobRunHistoryMapper.findPageList(map);    }    @Override    public void deleteBatch(Serializable... ids) throws Exception {        jobRunHistoryMapper.deleteBatch(ids);    }}